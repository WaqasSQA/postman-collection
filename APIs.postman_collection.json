{
	"info": {
		"_postman_id": "81e43abc-2ca5-4b99-9eea-fbafbbbfe607",
		"name": "APIs",
		"description": "This collection will consist of testing different APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26747985",
		"_collection_link": "https://blue-equinox-606019.postman.co/workspace/Waqas-Space~317c570b-6594-4720-b187-4b32da62cd3a/collection/26747985-81e43abc-2ca5-4b99-9eea-fbafbbbfe607?action=share&source=collection_link&creator=26747985"
	},
	"item": [
		{
			"name": "Smoke",
			"item": [
				{
					"name": "First",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Verify Get', ()=>{\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									"pm.test('Verify data in array', ()=>{\r",
									"    let jsonB = pm.response.json()\r",
									"    pm.expect(jsonB.data[1].first_name).to.equal('Lindsay')\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users?page=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sanity",
			"item": [
				{
					"name": "Second Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Verify 201', ()=>{\r",
									"    pm.response.to.have.status(201)\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let name = \"Waqas SDET\"\r",
									"console.log(\"the name is going to set is \"+name)\r",
									"console.info(\"this is info\")\r",
									"console.warn(\"this is warning\")\r",
									"console.error(\"This is error\")\r",
									"pm.globals.set(\"username\", name)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{username}}\",\r\n    \"job\": \"leader\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "3rd Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Verify Delete', ()=>{\r",
									"    pm.response.to.have.status(204)\r",
									"})\r",
									"postman.setNextRequest(null)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setNextRequest('3rd Delete')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users?page=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"let message = \"this runs before collection\"",
					"console.log(message)"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}